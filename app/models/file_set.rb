# Generated by curation_concerns:models:install
class FileSet < Dlibhydra::FileSet #ActiveFedora::Base
	include ::BlacklightHelper   #this is needed for logging output from GUI processes
  include ::CurationConcerns::FileSetBehavior
  self.human_readable_type = 'FileSet'
  

  #overriding the method in derivatives.rb because the file characterisation doesnt seem to be happening so derivs creation does not proceed. this makes it work anyway for the migration script (not so the gui), but have to force the mime_type in foxml_reader.
  def create_derivatives(filename) 
  logger.debug "using over ridden create_derivatives in dlibingest/app/models/file_set.rb"  
  type = filename.mime_type
  name = filename.original_name
  if(!name.blank?)
   logger.debug "original name of content file was " +name
  end
  if(!type.blank?)
  logger.debug "mimetype was " + type 
  else
  logger.debug "no mime type found"
  end
    
	#treatments all the same at present
	if filename.mime_type =  'application/pdf'
      Hydra::Derivatives::PdfDerivatives.create(filename,
                                                    outputs: [{ label: :thumbnail, format: 'jpg', size: '338x493', url: derivative_url('thumbnail') }]) 
	elsif filename.mime_type =  'image/jpeg'
	Hydra::Derivatives::ImageDerivatives.create(filename,
                                                    outputs: [{ label: :thumbnail, format: 'jpg', size: '338x493', url: derivative_url('thumbnail') }])
	elsif filename.mime_type =  'image/tiff'
	Hydra::Derivatives::ImageDerivatives.create(filename,
                                                    outputs: [{ label: :thumbnail, format: 'jpg', size: '338x493', url: derivative_url('thumbnail') }])
	elsif filename.mime_type =  'image/jp2'
	Hydra::Derivatives::ImageDerivatives.create(filename,
                                                    outputs: [{ label: :thumbnail, format: 'jpg', size: '338x493', url: derivative_url('thumbnail') }])
	else
	 logger.debug "assuming its a pdf"
	 Hydra::Derivatives::PdfDerivatives.create(filename,
                                                    outputs: [{ label: :thumbnail, format: 'jpg', size: '338x493', url: derivative_url('thumbnail') }]) 
	end
  end
  
  # might need an indexer?
end
